name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Dev tools
          pip install ruff black pytest pytest-cov
          # optional: pip install mypy types-requests types-setuptools

      - name: Ruff (lint)
        run: ruff check .

      - name: Pytest
        run: |
          pytest -q \
            --maxfail=1 \
            --disable-warnings \
            --cov=. --cov-report=xml --cov-report=term-missing \
            --junitxml=test-results.xml

      - name: Enforce coverage threshold
        run: |
          python - <<'PY'
          import xml.etree.ElementTree as ET
          tree = ET.parse("coverage.xml")
          rate = float(tree.getroot().get("line-rate", "0"))
          threshold = 0.80  # tweak as needed
          print(f"Line coverage: {rate*100:.1f}% (threshold {threshold*100:.0f}%)")
          exit(0 if rate >= threshold else 1)
          PY

      - name: Upload test & coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts-${{ matrix.python-version }}
          path: |
            test-results.xml
            coverage.xml